#!/usr/bin/env python
import rospy, math
from teb_local_planner.msg import ObstacleMsg
from geometry_msgs.msg import PolygonStamped, Point32


def publish_obstacle_msg():
  # Adjust the topic for navigation or remap
  pub = rospy.Publisher('/move_base/TebLocalPlannerROS/obstacles', ObstacleMsg, queue_size=1)

  rospy.init_node("publish_obstacles")

  # Create empty obstacle message that will be filled in afterwards
  obstacle_msg = ObstacleMsg() 
  obstacle_msg.header.stamp = rospy.Time.now()
  obstacle_msg.header.frame_id = "minefield" # CHANGE HERE: odom/map
  
  obstacle_msg.obstacles.append(PolygonStamped())
  obstacle_msg.obstacles[0].polygon.points = [Point32()]
  obstacle_msg.obstacles[0].polygon.points[0].x = 1.5
  obstacle_msg.obstacles[0].polygon.points[0].y = 0
  obstacle_msg.obstacles[0].polygon.points[0].z = 0
  
  obstacle_msg.obstacles.append(PolygonStamped())
  v1 = Point32()
  v1.x = -0.4
  v1.y = -0.4
  v2 = Point32()
  v2.x = -0.2
  v2.y = -1.2
  v3 = Point32()
  v3.x = 0
  v3.y = -0.2
  v4 = Point32()
  v4.x = 0.2
  v4.y = 0.2
  #obstacle_msg.obstacles[0].polygon.points = [v1, v2, v3, v4]
  

  r = rospy.Rate(10) # 10hz
 
  while not rospy.is_shutdown():
    
    pub.publish(obstacle_msg)
    
    r.sleep()


if __name__ == '__main__': 
  try:
    publish_obstacle_msg()
  except rospy.ROSInterruptException:
    pass
